<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hh.stock.system.mapper.UserMapper">

    <resultMap id="UserResult" type="com.hh.stock.common.core.domain.entity.User">
            <id property="id" column="id" jdbcType="VARCHAR"/>
            <result property="username" column="username" jdbcType="VARCHAR"/>
            <result property="password" column="password" jdbcType="VARCHAR"/>
            <result property="phone" column="phone" jdbcType="VARCHAR"/>
            <result property="realName" column="real_name" jdbcType="VARCHAR"/>
            <result property="nickName" column="nick_name" jdbcType="VARCHAR"/>
            <result property="userType" column="user_type" jdbcType="VARCHAR"/>
            <result property="email" column="email" jdbcType="VARCHAR"/>
            <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
            <result property="status" column="status" jdbcType="TINYINT"/>
            <result property="sex" column="sex" jdbcType="TINYINT"/>
            <result property="deleted" column="deleted" jdbcType="TINYINT"/>
            <result property="loginIp" column="login_ip" jdbcType="VARCHAR"/>
            <result property="loginDate" column="login_date" jdbcType="TIMESTAMP"/>
            <result property="createId" column="create_id" jdbcType="VARCHAR"/>
            <result property="updateId" column="update_id" jdbcType="VARCHAR"/>
            <result property="createWhere" column="create_where" jdbcType="TINYINT"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
            <result property="remark" column="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,username,password,
        phone,real_name,nick_name,
        user_type,email,avatar,
        status,sex,deleted,
        login_ip,login_date,create_id,
        update_id,create_where,create_time,
        update_time,remark
    </sql>
    <insert id="insertUser">
        insert into sys_user(
        <if test="id != null and id != 0">id,</if>
        <if test="username != null and username != ''">username,</if>
        <if test="nickName != null and nickName != ''">nick_name,</if>
        <if test="email != null and email != ''">email,</if>
        <if test="avatar != null and avatar != ''">avatar,</if>
        <if test="phone != null and phone != ''">phone,</if>
        <if test="sex != null and sex != ''">sex,</if>
        <if test="password != null and password != ''">password,</if>
        <if test="status != null and status != ''">status,</if>
        <if test="createId != null and createId != ''">create_id,</if>
        <if test="remark != null and remark != ''">remark,</if>
        create_time,
        update_time
        )values(
        <if test="id != null and id != ''">#{id},</if>
        <if test="username != null and username != ''">#{username},</if>
        <if test="nickName != null and nickName != ''">#{nickName},</if>
        <if test="email != null and email != ''">#{email},</if>
        <if test="avatar != null and avatar != ''">#{avatar},</if>
        <if test="phone != null and phone != ''">#{phone},</if>
        <if test="sex != null and sex != ''">#{sex},</if>
        <if test="password != null and password != ''">#{password},</if>
        <if test="status != null and status != ''">#{status},</if>
        <if test="createId != null and createId != ''">#{createId},</if>
        <if test="remark != null and remark != ''">#{remark},</if>
        sysdate(),
        sysdate()
        )
    </insert>
    <update id="updateUser">
        update sys_user
        <set>
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
            <if test="email != null ">email = #{email},</if>
            <if test="phone != null ">phone = #{phone},</if>
            <if test="sex != null and sex != ''">sex = #{sex},</if>
            <if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
            <if test="loginDate != null">login_date = #{loginDate},</if>
            <if test="updateId != null and updateId != ''">update_id = #{updateId},</if>
            <if test="remark != null">remark = #{remark},</if>
            update_time = sysdate()
        </set>
        where id = #{id}
    </update>

    <update id="resetUserPwd">

        update sys_user set password = #{password} where username = #{username}

    </update>

    <delete id="deleteUserByIds">
        update sys_user set deleted = '0' where id in
        <foreach collection="array" item="userIds" open="(" separator="," close=")">
            #{userIds}
        </foreach>
    </delete>

    <select id="selectUsersList" resultType="com.hh.stock.common.core.domain.entity.User">
        select
            <include refid="Base_Column_List" />
        from
            sys_user
    </select>
    <select id="findByUsername" parameterType="String" resultMap="UserResult">
        select
            <include refid="Base_Column_List" />
        from
            sys_user
        where username = #{username}
    </select>
    <select id="selectUserByUserName" resultType="com.hh.stock.common.core.domain.entity.User">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where u.username = #{username} and u.deleted = '1'

    </select>

    <select id="selectAllocatedList" resultType="com.hh.stock.common.core.domain.entity.User">
        select distinct u.id, u.username, u.nick_name, u.email, u.phone, u.status, u.create_time, u.update_time
        from sys_user u
        left join sys_user_role ur on u.id = ur.user_id
        left join sys_role r on r.id = ur.role_id
        where u.deleted = '1' and r.id = #{roleId}
        <if test="username == null and phone == null">

        </if>
        <if test="username != null and username != ''">
            AND u.username like concat('%', #{username}, '%')
        </if>
        <if test="phone != null and phone != ''">
            AND u.phone like concat('%', #{phone}, '%')
        </if>
    </select>

    <select id="selectUserList" resultType="com.hh.stock.common.core.domain.entity.User">
        select
            <include refid="Base_Column_List" />
        from sys_user u
        where u.deleted = '1'
        <if test="id != null and id != 0">
            AND u.id  = #{id}
        </if>
        <if test="username != null and username != ''">
            AND u.username like concat('%', #{username}, '%')
        </if>
        <if test="status != null and status != ''">
            AND u.status = #{status}
        </if>
        <if test="phone != null and phone != ''">
            AND u.phone like concat('%', #{phone}, '%')
        </if>
        <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
            AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
        </if>
        <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
            AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
        </if>

    </select>

    <select id="checkUserNameUnique" resultType="com.hh.stock.common.core.domain.entity.User">
        select id, username from sys_user where username = #{Username} and deleted = '1' limit 1

    </select>
    <select id="checkPhoneUnique" resultType="com.hh.stock.common.core.domain.entity.User">

        select id, phone from sys_user where phone = #{phone} and deleted = '1' limit 1

    </select>
    <select id="checkEmailUnique" resultType="com.hh.stock.common.core.domain.entity.User">
        select id, email from sys_user where email = #{email} and deleted = '1' limit 1
    </select>
    <select id="selectUserById" resultType="com.hh.stock.common.core.domain.entity.User">
        select
        <include refid="Base_Column_List"/>
        from sys_user u
        where u.id = #{userId}
    </select>
    <select id="selectUnallocatedList" resultType="com.hh.stock.common.core.domain.entity.User">
        select distinct u.id, u.username, u.nick_name, u.email, u.phone, u.status, u.create_time
        from sys_user u
        left join sys_user_role ur on u.id = ur.user_id
        left join sys_role r on r.id = ur.role_id
        where u.deleted = '1'  and (r.id != #{roleId} or r.id IS NULL)
        and u.id not in (select u.id from sys_user u inner join sys_user_role ur on u.id = ur.user_id and ur.role_id = #{roleId})
        <if test="username != null and username != ''">
            AND u.username like concat('%', #{username}, '%')
        </if>
        <if test="phone != null and phone != ''">
            AND u.phone like concat('%', #{phone}, '%')
        </if>
    </select>

</mapper>
