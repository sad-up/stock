<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hh.stock.system.mapper.StockBlockRtInfoMapper">

    <resultMap id="BaseResultMap" type="com.hh.stock.system.domain.StockBlockRtInfo">
            <id property="id" column="id" jdbcType="VARCHAR"/>
            <result property="label" column="label" jdbcType="VARCHAR"/>
            <result property="blockName" column="block_name" jdbcType="VARCHAR"/>
            <result property="companyNum" column="company_num" jdbcType="INTEGER"/>
            <result property="avgPrice" column="avg_price" jdbcType="DECIMAL"/>
            <result property="updownRate" column="updown_rate" jdbcType="DECIMAL"/>
            <result property="tradeAmount" column="trade_amount" jdbcType="BIGINT"/>
            <result property="tradeVolume" column="trade_volume" jdbcType="DECIMAL"/>
            <result property="curTime" column="cur_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,label,block_name,
        company_num,avg_price,updown_rate,
        trade_amount,trade_volume,cur_time
    </sql>

    <insert id="insertBatch">
        insert into stock_block_rt_info
        (
         <include refid="Base_Column_List" />
        )
        values
        <foreach collection="stockBlockRtInfoList" item="bi" separator=",">
        (#{bi.id,jdbcType=BIGINT},#{bi.label,jdbcType=VARCHAR},#{bi.blockName,jdbcType=VARCHAR}
        ,#{bi.companyNum,jdbcType=INTEGER},#{bi.avgPrice,jdbcType=DECIMAL},#{bi.updownRate,jdbcType=DECIMAL}
        ,#{bi.tradeAmount,jdbcType=BIGINT},#{bi.tradeVolume,jdbcType=DECIMAL},#{bi.curTime,jdbcType=TIMESTAMP}
        )
        </foreach>
    </insert>

    <select id="sectorAllLimit" resultType="com.hh.stock.common.core.domain.stockvo.StockBlockRtInfoVo">
        select distinct
            sbr.company_num  as companyNum,
            sbr.trade_amount as tradeAmount,
            sbr.label        as label,
            sbr.avg_price    as avgPrice,
            sbr.block_name   as blockName,
            date_format(sbr.cur_time,'%Y-%m-%d') as curTime,
            sbr.trade_volume as tradeVolume,
            sbr.updown_rate  as updownRate
        from stock_block_rt_info as sbr
        where sbr.cur_time =  #{lastDate}
        order by sbr.trade_volume desc
            limit 10
    </select>

    <select id="getStockRtInfoLimit" resultType="com.hh.stock.common.core.domain.stockvo.StockUpdownDomain">
        select distinct
            sri.trade_amount as tradeAmt,
            sri.pre_close_price as preClosePrice,
            (sri.max_price - sri.min_price) / sri.pre_close_price as amplitude,
            sri.stock_code as code,
            sri.stock_name as name,
            date_format(sri.cur_time, '%Y-%m-%d %H:%i') as curDate,
            sri.trade_volume as tradeVol,
            (sri.cur_price - sri.pre_close_price) as increase,
            (sri.cur_price - sri.pre_close_price) / sri.pre_close_price as upDown,
            sri.cur_price as tradePrice
        from stock_rt_info as sri
        where sri.cur_time = #{timePoint}
        order by  upDown desc
            limit 10;
    </select>

    <select id="getStockRtInfoAll" resultType="com.hh.stock.common.core.domain.stockvo.StockUpdownDomain">
        select distinct
            sri.trade_amount as tradeAmt,
            sri.pre_close_price as preClosePrice,
            (sri.max_price - sri.min_price) / sri.pre_close_price as amplitude,
            sri.stock_code as code,
            sri.stock_name as name,
            date_format(sri.cur_time, '%Y-%m-%d %H:%i') as curDate,
            sri.trade_volume as tradeVol,
            (sri.cur_price - sri.pre_close_price) as increase,
            (sri.cur_price - sri.pre_close_price) / sri.pre_close_price as upDown,
            sri.cur_price as tradePrice
        from stock_rt_info as sri
        where sri.cur_time =  #{timePoint}
        order by  upDown desc
    </select>
</mapper>
