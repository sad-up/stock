<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hh.stock.system.mapper.RoleMapper">

    <resultMap id="BaseResultMap" type="com.hh.stock.common.core.domain.entity.Role">
            <id property="id" column="id" jdbcType="VARCHAR"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="description" column="description" jdbcType="VARCHAR"/>
            <result property="status" column="status" jdbcType="TINYINT"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
            <result property="deleted" column="deleted" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,name,description,
        status,create_time,update_time,
        deleted
    </sql>

    <insert id="insertRole">
        insert into sys_role(
        <if test="id != null and id != 0">id,</if>
        <if test="name != null and name != ''">name,</if>
        <if test="description != null and description != ''">description,</if>
        <if test="status != null and status != ''">status,</if>
        create_time,
        update_time
        )values(
        <if test="id != null and id != 0">#{id},</if>
        <if test="name != null and name != ''">#{name},</if>
        <if test="description != null and description != ''">#{description},</if>
        <if test="status != null and status != ''">#{status},</if>
        sysdate(),
        sysdate()
        )
    </insert>

    <update id="updateRole">
        update sys_role
        <set>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="description != null">description = #{description},</if>

            update_time = sysdate()
        </set>
        where id = #{roleId}
    </update>

    <delete id="deleteRoleByIds" parameterType="String">
        update sys_role set deleted = '0' where id in
        <foreach collection="array" item="roleId" open="(" separator="," close=")">
            #{roleId}
        </foreach>
    </delete>

    <select id="findRolePermissionByUserId" resultMap="BaseResultMap">
        select distinct
            r.id,r.name,r.description,
            r.status,r.create_time,r.update_time,
            r.deleted
        from sys_role r
        left join sys_user_role ur on ur.role_id = r.id
        where ur.user_id = #{userId}
         and r.deleted = '1'
         and r.status = '1'
    </select>

    <select id="findRoleList" resultType="com.hh.stock.common.core.domain.entity.Role">
        select
            <include refid="Base_Column_List" />
        from sys_role
        where deleted = '1'
            <if test="roleName == null and status == null and beginTime == null and endTime == null">

            </if>
            <if test="beginTime != null and endTime != null">
                 and create_time between #{beginTime} and #{endTime}
            </if>
            <if test="roleName != null">
                 and name like concat('%',#{roleName},'%')
            </if>
            <if test="status != null">
                 and status = #{status}
            </if>
    </select>

    <select id="checkRoleNameUnique" parameterType="String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_role r
        where r.name=#{name} and r.deleted = '1' limit 1
    </select>

    <select id="selectRoleList" resultType="com.hh.stock.common.core.domain.entity.Role">
        select
            <include refid="Base_Column_List"/>
        from sys_role r
        where r.deleted = '1'
        <if test="id != null and id != 0">
            AND r.id = #{id}
        </if>
        <if test="name != null and name != ''">
            AND r.name like concat('%', #{name}, '%')
        </if>
        <if test="status != null and status != ''">
            AND r.status = #{status}
        </if>

        <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
            and date_format(r.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
        </if>
        <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
            and date_format(r.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
        </if>
    </select>

    <select id="selectRoleById" resultType="com.hh.stock.common.core.domain.entity.Role">
        select
        <include refid="Base_Column_List"/>
        from sys_role r
        where r.id = #{roleId}
    </select>
    <select id="selectRolePermissionByUserId" resultType="com.hh.stock.common.core.domain.entity.Role">
        select
            r.id,r.name,r.description,
            r.status,r.create_time,r.update_time,
            r.deleted
        from sys_role r
        left join sys_user_role ur on ur.role_id = r.id
        left join sys_user u on u.id = ur.user_id
        WHERE r.deleted = '1' and ur.user_id = #{userId}
    </select>
    <select id="selectRolesByUserName" resultType="com.hh.stock.common.core.domain.entity.Role">
        select
            r.id,r.name,r.description,
            r.status,r.create_time,r.update_time,
            r.deleted
        from sys_role r
        left join sys_user_role ur on ur.role_id = r.id
        left join sys_user u on u.id = ur.user_id
        WHERE r.deleted = '1' and u.username = #{userName}
    </select>
</mapper>
